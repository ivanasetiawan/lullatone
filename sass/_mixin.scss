@mixin icon($icon, $position:"before") {
	@if $position == "before" {
		@if $legacy-support-for-ie == true {
			.lt-ie8 & {
			 	zoom: expression(
			 		this.runtimeStyle.zoom="1",
			 		i = document.createElement("i"),
			 		i.className="ie-icon",
			 		this.insertBefore(i, this.firstChild)
			 		);
			}
		}
		//.lt-ie8 & .ie-icon,
		&:before {
			@extend %#{$icon};
			@extend %icon;
			@content;
		}
	}
	@elseif $position == "after" {
		@if $legacy-support-for-ie == true {
			.lt-ie8 & {
			 	zoom: expression(
			 		this.runtimeStyle.zoom="1",
			 		i = document.createElement("i"),
			 		i.className="ie-icon",
			 		this.appendChild(i)
			 		);
			}
		}
		//.lt-ie8 & .ie-icon,
		&:after {
			@extend %#{$icon};
			@extend %icon;
			@content;
		}
	}
}

@mixin data-uri-bg($image, $properties: false) {
	@if $properties != false {
		background: inline-image($image) $properties;
		*background: url($image) $properties;
	} @else {
		background: inline-image($image);
		*background: url($image);
	}
}

@mixin retina-image($image, $imgwidth, $imgheight, $properties: false) {
	background: url(/images/#{$image}.png) $properties;

	@media only screen and (-webkit-device-pixel-ratio: 2) {
		background: url(/images/#{$image}_2x.png) $properties;
		background-size: $imgwidth $imgheight
	}
}

@function colorLighten($basecolors) {
	@return lighten($basecolors, 25%);
}

@function emCalc($desired_size, $parent_size:$default-font-size) {
	@return $desired_size / $parent_size + 0em;
}

@function generateColor($color,$type) {
	@if( $type == 1 ) {
		@return $color;
	} @elseif $type == 2 {
		@return mix($color, #fff, 25%);
	} @elseif $type == 3 {
		@return mix($color, #fff, 50%);
	} @elseif $type == 4 {
		@return mix($color, #fff, 75%);
	}
}
